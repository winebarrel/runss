// Automatically generated by MockGen. DO NOT EDIT!
// Source: /Users/sugawara/.go/src/github.com/aws/aws-sdk-go/service/ssm/ssmiface/interface.go

package mockaws

import (
	request "github.com/aws/aws-sdk-go/aws/request"
	ssm "github.com/aws/aws-sdk-go/service/ssm"
	gomock "github.com/golang/mock/gomock"
)

// Mock of SSMAPI interface
type MockSSMAPI struct {
	ctrl     *gomock.Controller
	recorder *_MockSSMAPIRecorder
}

// Recorder for MockSSMAPI (not exported)
type _MockSSMAPIRecorder struct {
	mock *MockSSMAPI
}

func NewMockSSMAPI(ctrl *gomock.Controller) *MockSSMAPI {
	mock := &MockSSMAPI{ctrl: ctrl}
	mock.recorder = &_MockSSMAPIRecorder{mock}
	return mock
}

func (_m *MockSSMAPI) EXPECT() *_MockSSMAPIRecorder {
	return _m.recorder
}

func (_m *MockSSMAPI) AddTagsToResourceRequest(_param0 *ssm.AddTagsToResourceInput) (*request.Request, *ssm.AddTagsToResourceOutput) {
	ret := _m.ctrl.Call(_m, "AddTagsToResourceRequest", _param0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*ssm.AddTagsToResourceOutput)
	return ret0, ret1
}

func (_mr *_MockSSMAPIRecorder) AddTagsToResourceRequest(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "AddTagsToResourceRequest", arg0)
}

func (_m *MockSSMAPI) AddTagsToResource(_param0 *ssm.AddTagsToResourceInput) (*ssm.AddTagsToResourceOutput, error) {
	ret := _m.ctrl.Call(_m, "AddTagsToResource", _param0)
	ret0, _ := ret[0].(*ssm.AddTagsToResourceOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockSSMAPIRecorder) AddTagsToResource(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "AddTagsToResource", arg0)
}

func (_m *MockSSMAPI) CancelCommandRequest(_param0 *ssm.CancelCommandInput) (*request.Request, *ssm.CancelCommandOutput) {
	ret := _m.ctrl.Call(_m, "CancelCommandRequest", _param0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*ssm.CancelCommandOutput)
	return ret0, ret1
}

func (_mr *_MockSSMAPIRecorder) CancelCommandRequest(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "CancelCommandRequest", arg0)
}

func (_m *MockSSMAPI) CancelCommand(_param0 *ssm.CancelCommandInput) (*ssm.CancelCommandOutput, error) {
	ret := _m.ctrl.Call(_m, "CancelCommand", _param0)
	ret0, _ := ret[0].(*ssm.CancelCommandOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockSSMAPIRecorder) CancelCommand(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "CancelCommand", arg0)
}

func (_m *MockSSMAPI) CreateActivationRequest(_param0 *ssm.CreateActivationInput) (*request.Request, *ssm.CreateActivationOutput) {
	ret := _m.ctrl.Call(_m, "CreateActivationRequest", _param0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*ssm.CreateActivationOutput)
	return ret0, ret1
}

func (_mr *_MockSSMAPIRecorder) CreateActivationRequest(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "CreateActivationRequest", arg0)
}

func (_m *MockSSMAPI) CreateActivation(_param0 *ssm.CreateActivationInput) (*ssm.CreateActivationOutput, error) {
	ret := _m.ctrl.Call(_m, "CreateActivation", _param0)
	ret0, _ := ret[0].(*ssm.CreateActivationOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockSSMAPIRecorder) CreateActivation(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "CreateActivation", arg0)
}

func (_m *MockSSMAPI) CreateAssociationRequest(_param0 *ssm.CreateAssociationInput) (*request.Request, *ssm.CreateAssociationOutput) {
	ret := _m.ctrl.Call(_m, "CreateAssociationRequest", _param0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*ssm.CreateAssociationOutput)
	return ret0, ret1
}

func (_mr *_MockSSMAPIRecorder) CreateAssociationRequest(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "CreateAssociationRequest", arg0)
}

func (_m *MockSSMAPI) CreateAssociation(_param0 *ssm.CreateAssociationInput) (*ssm.CreateAssociationOutput, error) {
	ret := _m.ctrl.Call(_m, "CreateAssociation", _param0)
	ret0, _ := ret[0].(*ssm.CreateAssociationOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockSSMAPIRecorder) CreateAssociation(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "CreateAssociation", arg0)
}

func (_m *MockSSMAPI) CreateAssociationBatchRequest(_param0 *ssm.CreateAssociationBatchInput) (*request.Request, *ssm.CreateAssociationBatchOutput) {
	ret := _m.ctrl.Call(_m, "CreateAssociationBatchRequest", _param0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*ssm.CreateAssociationBatchOutput)
	return ret0, ret1
}

func (_mr *_MockSSMAPIRecorder) CreateAssociationBatchRequest(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "CreateAssociationBatchRequest", arg0)
}

func (_m *MockSSMAPI) CreateAssociationBatch(_param0 *ssm.CreateAssociationBatchInput) (*ssm.CreateAssociationBatchOutput, error) {
	ret := _m.ctrl.Call(_m, "CreateAssociationBatch", _param0)
	ret0, _ := ret[0].(*ssm.CreateAssociationBatchOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockSSMAPIRecorder) CreateAssociationBatch(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "CreateAssociationBatch", arg0)
}

func (_m *MockSSMAPI) CreateDocumentRequest(_param0 *ssm.CreateDocumentInput) (*request.Request, *ssm.CreateDocumentOutput) {
	ret := _m.ctrl.Call(_m, "CreateDocumentRequest", _param0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*ssm.CreateDocumentOutput)
	return ret0, ret1
}

func (_mr *_MockSSMAPIRecorder) CreateDocumentRequest(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "CreateDocumentRequest", arg0)
}

func (_m *MockSSMAPI) CreateDocument(_param0 *ssm.CreateDocumentInput) (*ssm.CreateDocumentOutput, error) {
	ret := _m.ctrl.Call(_m, "CreateDocument", _param0)
	ret0, _ := ret[0].(*ssm.CreateDocumentOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockSSMAPIRecorder) CreateDocument(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "CreateDocument", arg0)
}

func (_m *MockSSMAPI) DeleteActivationRequest(_param0 *ssm.DeleteActivationInput) (*request.Request, *ssm.DeleteActivationOutput) {
	ret := _m.ctrl.Call(_m, "DeleteActivationRequest", _param0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*ssm.DeleteActivationOutput)
	return ret0, ret1
}

func (_mr *_MockSSMAPIRecorder) DeleteActivationRequest(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DeleteActivationRequest", arg0)
}

func (_m *MockSSMAPI) DeleteActivation(_param0 *ssm.DeleteActivationInput) (*ssm.DeleteActivationOutput, error) {
	ret := _m.ctrl.Call(_m, "DeleteActivation", _param0)
	ret0, _ := ret[0].(*ssm.DeleteActivationOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockSSMAPIRecorder) DeleteActivation(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DeleteActivation", arg0)
}

func (_m *MockSSMAPI) DeleteAssociationRequest(_param0 *ssm.DeleteAssociationInput) (*request.Request, *ssm.DeleteAssociationOutput) {
	ret := _m.ctrl.Call(_m, "DeleteAssociationRequest", _param0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*ssm.DeleteAssociationOutput)
	return ret0, ret1
}

func (_mr *_MockSSMAPIRecorder) DeleteAssociationRequest(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DeleteAssociationRequest", arg0)
}

func (_m *MockSSMAPI) DeleteAssociation(_param0 *ssm.DeleteAssociationInput) (*ssm.DeleteAssociationOutput, error) {
	ret := _m.ctrl.Call(_m, "DeleteAssociation", _param0)
	ret0, _ := ret[0].(*ssm.DeleteAssociationOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockSSMAPIRecorder) DeleteAssociation(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DeleteAssociation", arg0)
}

func (_m *MockSSMAPI) DeleteDocumentRequest(_param0 *ssm.DeleteDocumentInput) (*request.Request, *ssm.DeleteDocumentOutput) {
	ret := _m.ctrl.Call(_m, "DeleteDocumentRequest", _param0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*ssm.DeleteDocumentOutput)
	return ret0, ret1
}

func (_mr *_MockSSMAPIRecorder) DeleteDocumentRequest(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DeleteDocumentRequest", arg0)
}

func (_m *MockSSMAPI) DeleteDocument(_param0 *ssm.DeleteDocumentInput) (*ssm.DeleteDocumentOutput, error) {
	ret := _m.ctrl.Call(_m, "DeleteDocument", _param0)
	ret0, _ := ret[0].(*ssm.DeleteDocumentOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockSSMAPIRecorder) DeleteDocument(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DeleteDocument", arg0)
}

func (_m *MockSSMAPI) DeregisterManagedInstanceRequest(_param0 *ssm.DeregisterManagedInstanceInput) (*request.Request, *ssm.DeregisterManagedInstanceOutput) {
	ret := _m.ctrl.Call(_m, "DeregisterManagedInstanceRequest", _param0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*ssm.DeregisterManagedInstanceOutput)
	return ret0, ret1
}

func (_mr *_MockSSMAPIRecorder) DeregisterManagedInstanceRequest(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DeregisterManagedInstanceRequest", arg0)
}

func (_m *MockSSMAPI) DeregisterManagedInstance(_param0 *ssm.DeregisterManagedInstanceInput) (*ssm.DeregisterManagedInstanceOutput, error) {
	ret := _m.ctrl.Call(_m, "DeregisterManagedInstance", _param0)
	ret0, _ := ret[0].(*ssm.DeregisterManagedInstanceOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockSSMAPIRecorder) DeregisterManagedInstance(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DeregisterManagedInstance", arg0)
}

func (_m *MockSSMAPI) DescribeActivationsRequest(_param0 *ssm.DescribeActivationsInput) (*request.Request, *ssm.DescribeActivationsOutput) {
	ret := _m.ctrl.Call(_m, "DescribeActivationsRequest", _param0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*ssm.DescribeActivationsOutput)
	return ret0, ret1
}

func (_mr *_MockSSMAPIRecorder) DescribeActivationsRequest(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DescribeActivationsRequest", arg0)
}

func (_m *MockSSMAPI) DescribeActivations(_param0 *ssm.DescribeActivationsInput) (*ssm.DescribeActivationsOutput, error) {
	ret := _m.ctrl.Call(_m, "DescribeActivations", _param0)
	ret0, _ := ret[0].(*ssm.DescribeActivationsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockSSMAPIRecorder) DescribeActivations(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DescribeActivations", arg0)
}

func (_m *MockSSMAPI) DescribeActivationsPages(_param0 *ssm.DescribeActivationsInput, _param1 func(*ssm.DescribeActivationsOutput, bool) bool) error {
	ret := _m.ctrl.Call(_m, "DescribeActivationsPages", _param0, _param1)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockSSMAPIRecorder) DescribeActivationsPages(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DescribeActivationsPages", arg0, arg1)
}

func (_m *MockSSMAPI) DescribeAssociationRequest(_param0 *ssm.DescribeAssociationInput) (*request.Request, *ssm.DescribeAssociationOutput) {
	ret := _m.ctrl.Call(_m, "DescribeAssociationRequest", _param0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*ssm.DescribeAssociationOutput)
	return ret0, ret1
}

func (_mr *_MockSSMAPIRecorder) DescribeAssociationRequest(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DescribeAssociationRequest", arg0)
}

func (_m *MockSSMAPI) DescribeAssociation(_param0 *ssm.DescribeAssociationInput) (*ssm.DescribeAssociationOutput, error) {
	ret := _m.ctrl.Call(_m, "DescribeAssociation", _param0)
	ret0, _ := ret[0].(*ssm.DescribeAssociationOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockSSMAPIRecorder) DescribeAssociation(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DescribeAssociation", arg0)
}

func (_m *MockSSMAPI) DescribeDocumentRequest(_param0 *ssm.DescribeDocumentInput) (*request.Request, *ssm.DescribeDocumentOutput) {
	ret := _m.ctrl.Call(_m, "DescribeDocumentRequest", _param0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*ssm.DescribeDocumentOutput)
	return ret0, ret1
}

func (_mr *_MockSSMAPIRecorder) DescribeDocumentRequest(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DescribeDocumentRequest", arg0)
}

func (_m *MockSSMAPI) DescribeDocument(_param0 *ssm.DescribeDocumentInput) (*ssm.DescribeDocumentOutput, error) {
	ret := _m.ctrl.Call(_m, "DescribeDocument", _param0)
	ret0, _ := ret[0].(*ssm.DescribeDocumentOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockSSMAPIRecorder) DescribeDocument(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DescribeDocument", arg0)
}

func (_m *MockSSMAPI) DescribeDocumentPermissionRequest(_param0 *ssm.DescribeDocumentPermissionInput) (*request.Request, *ssm.DescribeDocumentPermissionOutput) {
	ret := _m.ctrl.Call(_m, "DescribeDocumentPermissionRequest", _param0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*ssm.DescribeDocumentPermissionOutput)
	return ret0, ret1
}

func (_mr *_MockSSMAPIRecorder) DescribeDocumentPermissionRequest(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DescribeDocumentPermissionRequest", arg0)
}

func (_m *MockSSMAPI) DescribeDocumentPermission(_param0 *ssm.DescribeDocumentPermissionInput) (*ssm.DescribeDocumentPermissionOutput, error) {
	ret := _m.ctrl.Call(_m, "DescribeDocumentPermission", _param0)
	ret0, _ := ret[0].(*ssm.DescribeDocumentPermissionOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockSSMAPIRecorder) DescribeDocumentPermission(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DescribeDocumentPermission", arg0)
}

func (_m *MockSSMAPI) DescribeInstanceInformationRequest(_param0 *ssm.DescribeInstanceInformationInput) (*request.Request, *ssm.DescribeInstanceInformationOutput) {
	ret := _m.ctrl.Call(_m, "DescribeInstanceInformationRequest", _param0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*ssm.DescribeInstanceInformationOutput)
	return ret0, ret1
}

func (_mr *_MockSSMAPIRecorder) DescribeInstanceInformationRequest(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DescribeInstanceInformationRequest", arg0)
}

func (_m *MockSSMAPI) DescribeInstanceInformation(_param0 *ssm.DescribeInstanceInformationInput) (*ssm.DescribeInstanceInformationOutput, error) {
	ret := _m.ctrl.Call(_m, "DescribeInstanceInformation", _param0)
	ret0, _ := ret[0].(*ssm.DescribeInstanceInformationOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockSSMAPIRecorder) DescribeInstanceInformation(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DescribeInstanceInformation", arg0)
}

func (_m *MockSSMAPI) DescribeInstanceInformationPages(_param0 *ssm.DescribeInstanceInformationInput, _param1 func(*ssm.DescribeInstanceInformationOutput, bool) bool) error {
	ret := _m.ctrl.Call(_m, "DescribeInstanceInformationPages", _param0, _param1)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockSSMAPIRecorder) DescribeInstanceInformationPages(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DescribeInstanceInformationPages", arg0, arg1)
}

func (_m *MockSSMAPI) GetDocumentRequest(_param0 *ssm.GetDocumentInput) (*request.Request, *ssm.GetDocumentOutput) {
	ret := _m.ctrl.Call(_m, "GetDocumentRequest", _param0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*ssm.GetDocumentOutput)
	return ret0, ret1
}

func (_mr *_MockSSMAPIRecorder) GetDocumentRequest(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetDocumentRequest", arg0)
}

func (_m *MockSSMAPI) GetDocument(_param0 *ssm.GetDocumentInput) (*ssm.GetDocumentOutput, error) {
	ret := _m.ctrl.Call(_m, "GetDocument", _param0)
	ret0, _ := ret[0].(*ssm.GetDocumentOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockSSMAPIRecorder) GetDocument(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetDocument", arg0)
}

func (_m *MockSSMAPI) ListAssociationsRequest(_param0 *ssm.ListAssociationsInput) (*request.Request, *ssm.ListAssociationsOutput) {
	ret := _m.ctrl.Call(_m, "ListAssociationsRequest", _param0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*ssm.ListAssociationsOutput)
	return ret0, ret1
}

func (_mr *_MockSSMAPIRecorder) ListAssociationsRequest(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ListAssociationsRequest", arg0)
}

func (_m *MockSSMAPI) ListAssociations(_param0 *ssm.ListAssociationsInput) (*ssm.ListAssociationsOutput, error) {
	ret := _m.ctrl.Call(_m, "ListAssociations", _param0)
	ret0, _ := ret[0].(*ssm.ListAssociationsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockSSMAPIRecorder) ListAssociations(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ListAssociations", arg0)
}

func (_m *MockSSMAPI) ListAssociationsPages(_param0 *ssm.ListAssociationsInput, _param1 func(*ssm.ListAssociationsOutput, bool) bool) error {
	ret := _m.ctrl.Call(_m, "ListAssociationsPages", _param0, _param1)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockSSMAPIRecorder) ListAssociationsPages(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ListAssociationsPages", arg0, arg1)
}

func (_m *MockSSMAPI) ListCommandInvocationsRequest(_param0 *ssm.ListCommandInvocationsInput) (*request.Request, *ssm.ListCommandInvocationsOutput) {
	ret := _m.ctrl.Call(_m, "ListCommandInvocationsRequest", _param0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*ssm.ListCommandInvocationsOutput)
	return ret0, ret1
}

func (_mr *_MockSSMAPIRecorder) ListCommandInvocationsRequest(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ListCommandInvocationsRequest", arg0)
}

func (_m *MockSSMAPI) ListCommandInvocations(_param0 *ssm.ListCommandInvocationsInput) (*ssm.ListCommandInvocationsOutput, error) {
	ret := _m.ctrl.Call(_m, "ListCommandInvocations", _param0)
	ret0, _ := ret[0].(*ssm.ListCommandInvocationsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockSSMAPIRecorder) ListCommandInvocations(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ListCommandInvocations", arg0)
}

func (_m *MockSSMAPI) ListCommandInvocationsPages(_param0 *ssm.ListCommandInvocationsInput, _param1 func(*ssm.ListCommandInvocationsOutput, bool) bool) error {
	ret := _m.ctrl.Call(_m, "ListCommandInvocationsPages", _param0, _param1)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockSSMAPIRecorder) ListCommandInvocationsPages(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ListCommandInvocationsPages", arg0, arg1)
}

func (_m *MockSSMAPI) ListCommandsRequest(_param0 *ssm.ListCommandsInput) (*request.Request, *ssm.ListCommandsOutput) {
	ret := _m.ctrl.Call(_m, "ListCommandsRequest", _param0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*ssm.ListCommandsOutput)
	return ret0, ret1
}

func (_mr *_MockSSMAPIRecorder) ListCommandsRequest(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ListCommandsRequest", arg0)
}

func (_m *MockSSMAPI) ListCommands(_param0 *ssm.ListCommandsInput) (*ssm.ListCommandsOutput, error) {
	ret := _m.ctrl.Call(_m, "ListCommands", _param0)
	ret0, _ := ret[0].(*ssm.ListCommandsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockSSMAPIRecorder) ListCommands(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ListCommands", arg0)
}

func (_m *MockSSMAPI) ListCommandsPages(_param0 *ssm.ListCommandsInput, _param1 func(*ssm.ListCommandsOutput, bool) bool) error {
	ret := _m.ctrl.Call(_m, "ListCommandsPages", _param0, _param1)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockSSMAPIRecorder) ListCommandsPages(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ListCommandsPages", arg0, arg1)
}

func (_m *MockSSMAPI) ListDocumentsRequest(_param0 *ssm.ListDocumentsInput) (*request.Request, *ssm.ListDocumentsOutput) {
	ret := _m.ctrl.Call(_m, "ListDocumentsRequest", _param0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*ssm.ListDocumentsOutput)
	return ret0, ret1
}

func (_mr *_MockSSMAPIRecorder) ListDocumentsRequest(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ListDocumentsRequest", arg0)
}

func (_m *MockSSMAPI) ListDocuments(_param0 *ssm.ListDocumentsInput) (*ssm.ListDocumentsOutput, error) {
	ret := _m.ctrl.Call(_m, "ListDocuments", _param0)
	ret0, _ := ret[0].(*ssm.ListDocumentsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockSSMAPIRecorder) ListDocuments(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ListDocuments", arg0)
}

func (_m *MockSSMAPI) ListDocumentsPages(_param0 *ssm.ListDocumentsInput, _param1 func(*ssm.ListDocumentsOutput, bool) bool) error {
	ret := _m.ctrl.Call(_m, "ListDocumentsPages", _param0, _param1)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockSSMAPIRecorder) ListDocumentsPages(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ListDocumentsPages", arg0, arg1)
}

func (_m *MockSSMAPI) ListTagsForResourceRequest(_param0 *ssm.ListTagsForResourceInput) (*request.Request, *ssm.ListTagsForResourceOutput) {
	ret := _m.ctrl.Call(_m, "ListTagsForResourceRequest", _param0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*ssm.ListTagsForResourceOutput)
	return ret0, ret1
}

func (_mr *_MockSSMAPIRecorder) ListTagsForResourceRequest(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ListTagsForResourceRequest", arg0)
}

func (_m *MockSSMAPI) ListTagsForResource(_param0 *ssm.ListTagsForResourceInput) (*ssm.ListTagsForResourceOutput, error) {
	ret := _m.ctrl.Call(_m, "ListTagsForResource", _param0)
	ret0, _ := ret[0].(*ssm.ListTagsForResourceOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockSSMAPIRecorder) ListTagsForResource(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ListTagsForResource", arg0)
}

func (_m *MockSSMAPI) ModifyDocumentPermissionRequest(_param0 *ssm.ModifyDocumentPermissionInput) (*request.Request, *ssm.ModifyDocumentPermissionOutput) {
	ret := _m.ctrl.Call(_m, "ModifyDocumentPermissionRequest", _param0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*ssm.ModifyDocumentPermissionOutput)
	return ret0, ret1
}

func (_mr *_MockSSMAPIRecorder) ModifyDocumentPermissionRequest(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ModifyDocumentPermissionRequest", arg0)
}

func (_m *MockSSMAPI) ModifyDocumentPermission(_param0 *ssm.ModifyDocumentPermissionInput) (*ssm.ModifyDocumentPermissionOutput, error) {
	ret := _m.ctrl.Call(_m, "ModifyDocumentPermission", _param0)
	ret0, _ := ret[0].(*ssm.ModifyDocumentPermissionOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockSSMAPIRecorder) ModifyDocumentPermission(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ModifyDocumentPermission", arg0)
}

func (_m *MockSSMAPI) RemoveTagsFromResourceRequest(_param0 *ssm.RemoveTagsFromResourceInput) (*request.Request, *ssm.RemoveTagsFromResourceOutput) {
	ret := _m.ctrl.Call(_m, "RemoveTagsFromResourceRequest", _param0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*ssm.RemoveTagsFromResourceOutput)
	return ret0, ret1
}

func (_mr *_MockSSMAPIRecorder) RemoveTagsFromResourceRequest(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "RemoveTagsFromResourceRequest", arg0)
}

func (_m *MockSSMAPI) RemoveTagsFromResource(_param0 *ssm.RemoveTagsFromResourceInput) (*ssm.RemoveTagsFromResourceOutput, error) {
	ret := _m.ctrl.Call(_m, "RemoveTagsFromResource", _param0)
	ret0, _ := ret[0].(*ssm.RemoveTagsFromResourceOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockSSMAPIRecorder) RemoveTagsFromResource(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "RemoveTagsFromResource", arg0)
}

func (_m *MockSSMAPI) SendCommandRequest(_param0 *ssm.SendCommandInput) (*request.Request, *ssm.SendCommandOutput) {
	ret := _m.ctrl.Call(_m, "SendCommandRequest", _param0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*ssm.SendCommandOutput)
	return ret0, ret1
}

func (_mr *_MockSSMAPIRecorder) SendCommandRequest(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "SendCommandRequest", arg0)
}

func (_m *MockSSMAPI) SendCommand(_param0 *ssm.SendCommandInput) (*ssm.SendCommandOutput, error) {
	ret := _m.ctrl.Call(_m, "SendCommand", _param0)
	ret0, _ := ret[0].(*ssm.SendCommandOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockSSMAPIRecorder) SendCommand(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "SendCommand", arg0)
}

func (_m *MockSSMAPI) UpdateAssociationStatusRequest(_param0 *ssm.UpdateAssociationStatusInput) (*request.Request, *ssm.UpdateAssociationStatusOutput) {
	ret := _m.ctrl.Call(_m, "UpdateAssociationStatusRequest", _param0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*ssm.UpdateAssociationStatusOutput)
	return ret0, ret1
}

func (_mr *_MockSSMAPIRecorder) UpdateAssociationStatusRequest(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "UpdateAssociationStatusRequest", arg0)
}

func (_m *MockSSMAPI) UpdateAssociationStatus(_param0 *ssm.UpdateAssociationStatusInput) (*ssm.UpdateAssociationStatusOutput, error) {
	ret := _m.ctrl.Call(_m, "UpdateAssociationStatus", _param0)
	ret0, _ := ret[0].(*ssm.UpdateAssociationStatusOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockSSMAPIRecorder) UpdateAssociationStatus(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "UpdateAssociationStatus", arg0)
}

func (_m *MockSSMAPI) UpdateManagedInstanceRoleRequest(_param0 *ssm.UpdateManagedInstanceRoleInput) (*request.Request, *ssm.UpdateManagedInstanceRoleOutput) {
	ret := _m.ctrl.Call(_m, "UpdateManagedInstanceRoleRequest", _param0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*ssm.UpdateManagedInstanceRoleOutput)
	return ret0, ret1
}

func (_mr *_MockSSMAPIRecorder) UpdateManagedInstanceRoleRequest(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "UpdateManagedInstanceRoleRequest", arg0)
}

func (_m *MockSSMAPI) UpdateManagedInstanceRole(_param0 *ssm.UpdateManagedInstanceRoleInput) (*ssm.UpdateManagedInstanceRoleOutput, error) {
	ret := _m.ctrl.Call(_m, "UpdateManagedInstanceRole", _param0)
	ret0, _ := ret[0].(*ssm.UpdateManagedInstanceRoleOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockSSMAPIRecorder) UpdateManagedInstanceRole(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "UpdateManagedInstanceRole", arg0)
}
